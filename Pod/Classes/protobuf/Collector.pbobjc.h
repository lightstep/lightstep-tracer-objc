// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: collector.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class GPBTimestamp;
@class LTSAuth;
@class LTSCommand;
@class LTSInternalMetrics;
@class LTSKeyValue;
@class LTSLog;
@class LTSMetricsSample;
@class LTSReference;
@class LTSSpan;
@class LTSSpanContext;
@class LTSTracer;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum LTSReference_Relationship

typedef GPB_ENUM(LTSReference_Relationship) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  LTSReference_Relationship_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  LTSReference_Relationship_ChildOf = 0,
  LTSReference_Relationship_FollowsFrom = 1,
};

GPBEnumDescriptor *LTSReference_Relationship_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL LTSReference_Relationship_IsValidValue(int32_t value);

#pragma mark - LTSCollectorRoot

/// Exposes the extension registry for this file.
///
/// The base class provides:
/// @code
///   + (GPBExtensionRegistry *)extensionRegistry;
/// @endcode
/// which is a @c GPBExtensionRegistry that includes all the extensions defined by
/// this file and all files that it depends on.
@interface LTSCollectorRoot : GPBRootObject
@end

#pragma mark - LTSSpanContext

typedef GPB_ENUM(LTSSpanContext_FieldNumber) {
  LTSSpanContext_FieldNumber_TraceId = 1,
  LTSSpanContext_FieldNumber_SpanId = 2,
  LTSSpanContext_FieldNumber_Baggage = 3,
};

@interface LTSSpanContext : GPBMessage

@property(nonatomic, readwrite) uint64_t traceId;

@property(nonatomic, readwrite) uint64_t spanId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *baggage;
/// The number of items in @c baggage without causing the array to be created.
@property(nonatomic, readonly) NSUInteger baggage_Count;

@end

#pragma mark - LTSKeyValue

typedef GPB_ENUM(LTSKeyValue_FieldNumber) {
  LTSKeyValue_FieldNumber_Key = 1,
  LTSKeyValue_FieldNumber_StringValue = 2,
  LTSKeyValue_FieldNumber_IntValue = 3,
  LTSKeyValue_FieldNumber_DoubleValue = 4,
  LTSKeyValue_FieldNumber_BoolValue = 5,
};

typedef GPB_ENUM(LTSKeyValue_Value_OneOfCase) {
  LTSKeyValue_Value_OneOfCase_GPBUnsetOneOfCase = 0,
  LTSKeyValue_Value_OneOfCase_StringValue = 2,
  LTSKeyValue_Value_OneOfCase_IntValue = 3,
  LTSKeyValue_Value_OneOfCase_DoubleValue = 4,
  LTSKeyValue_Value_OneOfCase_BoolValue = 5,
};

@interface LTSKeyValue : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@property(nonatomic, readonly) LTSKeyValue_Value_OneOfCase valueOneOfCase;

@property(nonatomic, readwrite, copy, null_resettable) NSString *stringValue;

@property(nonatomic, readwrite) int64_t intValue;

@property(nonatomic, readwrite) double doubleValue;

@property(nonatomic, readwrite) BOOL boolValue;

@end

/// Clears whatever value was set for the oneof 'value'.
void LTSKeyValue_ClearValueOneOfCase(LTSKeyValue *message);

#pragma mark - LTSLog

typedef GPB_ENUM(LTSLog_FieldNumber) {
  LTSLog_FieldNumber_Timestamp = 1,
  LTSLog_FieldNumber_KeyvaluesArray = 2,
};

@interface LTSLog : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *timestamp;
/// Test to see if @c timestamp has been set.
@property(nonatomic, readwrite) BOOL hasTimestamp;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LTSKeyValue*> *keyvaluesArray;
/// The number of items in @c keyvaluesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger keyvaluesArray_Count;

@end

#pragma mark - LTSReference

typedef GPB_ENUM(LTSReference_FieldNumber) {
  LTSReference_FieldNumber_Relationship = 1,
  LTSReference_FieldNumber_SpanContext = 2,
};

@interface LTSReference : GPBMessage

@property(nonatomic, readwrite) LTSReference_Relationship relationship;

@property(nonatomic, readwrite, strong, null_resettable) LTSSpanContext *spanContext;
/// Test to see if @c spanContext has been set.
@property(nonatomic, readwrite) BOOL hasSpanContext;

@end

/// Fetches the raw value of a @c LTSReference's @c relationship property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t LTSReference_Relationship_RawValue(LTSReference *message);
/// Sets the raw value of an @c LTSReference's @c relationship property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetLTSReference_Relationship_RawValue(LTSReference *message, int32_t value);

#pragma mark - LTSSpan

typedef GPB_ENUM(LTSSpan_FieldNumber) {
  LTSSpan_FieldNumber_SpanContext = 1,
  LTSSpan_FieldNumber_OperationName = 2,
  LTSSpan_FieldNumber_ReferencesArray = 3,
  LTSSpan_FieldNumber_StartTimestamp = 4,
  LTSSpan_FieldNumber_DurationMicros = 5,
  LTSSpan_FieldNumber_TagsArray = 6,
  LTSSpan_FieldNumber_LogsArray = 7,
};

@interface LTSSpan : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) LTSSpanContext *spanContext;
/// Test to see if @c spanContext has been set.
@property(nonatomic, readwrite) BOOL hasSpanContext;

@property(nonatomic, readwrite, copy, null_resettable) NSString *operationName;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LTSReference*> *referencesArray;
/// The number of items in @c referencesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger referencesArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *startTimestamp;
/// Test to see if @c startTimestamp has been set.
@property(nonatomic, readwrite) BOOL hasStartTimestamp;

@property(nonatomic, readwrite) uint64_t durationMicros;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LTSKeyValue*> *tagsArray;
/// The number of items in @c tagsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger tagsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LTSLog*> *logsArray;
/// The number of items in @c logsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger logsArray_Count;

@end

#pragma mark - LTSTracer

typedef GPB_ENUM(LTSTracer_FieldNumber) {
  LTSTracer_FieldNumber_TracerId = 1,
  LTSTracer_FieldNumber_TagsArray = 4,
};

@interface LTSTracer : GPBMessage

@property(nonatomic, readwrite) uint64_t tracerId;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LTSKeyValue*> *tagsArray;
/// The number of items in @c tagsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger tagsArray_Count;

@end

#pragma mark - LTSMetricsSample

typedef GPB_ENUM(LTSMetricsSample_FieldNumber) {
  LTSMetricsSample_FieldNumber_Name = 1,
  LTSMetricsSample_FieldNumber_IntValue = 2,
  LTSMetricsSample_FieldNumber_DoubleValue = 3,
};

typedef GPB_ENUM(LTSMetricsSample_Value_OneOfCase) {
  LTSMetricsSample_Value_OneOfCase_GPBUnsetOneOfCase = 0,
  LTSMetricsSample_Value_OneOfCase_IntValue = 2,
  LTSMetricsSample_Value_OneOfCase_DoubleValue = 3,
};

@interface LTSMetricsSample : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readonly) LTSMetricsSample_Value_OneOfCase valueOneOfCase;

@property(nonatomic, readwrite) int64_t intValue;

@property(nonatomic, readwrite) double doubleValue;

@end

/// Clears whatever value was set for the oneof 'value'.
void LTSMetricsSample_ClearValueOneOfCase(LTSMetricsSample *message);

#pragma mark - LTSInternalMetrics

typedef GPB_ENUM(LTSInternalMetrics_FieldNumber) {
  LTSInternalMetrics_FieldNumber_StartTimestamp = 1,
  LTSInternalMetrics_FieldNumber_DurationMicros = 2,
  LTSInternalMetrics_FieldNumber_LogsArray = 3,
  LTSInternalMetrics_FieldNumber_CountsArray = 4,
  LTSInternalMetrics_FieldNumber_GaugesArray = 5,
};

@interface LTSInternalMetrics : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *startTimestamp;
/// Test to see if @c startTimestamp has been set.
@property(nonatomic, readwrite) BOOL hasStartTimestamp;

@property(nonatomic, readwrite) uint64_t durationMicros;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LTSLog*> *logsArray;
/// The number of items in @c logsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger logsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LTSMetricsSample*> *countsArray;
/// The number of items in @c countsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger countsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LTSMetricsSample*> *gaugesArray;
/// The number of items in @c gaugesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger gaugesArray_Count;

@end

#pragma mark - LTSAuth

typedef GPB_ENUM(LTSAuth_FieldNumber) {
  LTSAuth_FieldNumber_AccessToken = 1,
};

@interface LTSAuth : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *accessToken;

@end

#pragma mark - LTSReportRequest

typedef GPB_ENUM(LTSReportRequest_FieldNumber) {
  LTSReportRequest_FieldNumber_Tracer = 1,
  LTSReportRequest_FieldNumber_Auth = 2,
  LTSReportRequest_FieldNumber_SpansArray = 3,
  LTSReportRequest_FieldNumber_TimestampOffsetMicros = 5,
  LTSReportRequest_FieldNumber_InternalMetrics = 6,
};

@interface LTSReportRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) LTSTracer *tracer;
/// Test to see if @c tracer has been set.
@property(nonatomic, readwrite) BOOL hasTracer;

@property(nonatomic, readwrite, strong, null_resettable) LTSAuth *auth;
/// Test to see if @c auth has been set.
@property(nonatomic, readwrite) BOOL hasAuth;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LTSSpan*> *spansArray;
/// The number of items in @c spansArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger spansArray_Count;

@property(nonatomic, readwrite) uint32_t timestampOffsetMicros;

@property(nonatomic, readwrite, strong, null_resettable) LTSInternalMetrics *internalMetrics;
/// Test to see if @c internalMetrics has been set.
@property(nonatomic, readwrite) BOOL hasInternalMetrics;

@end

#pragma mark - LTSCommand

typedef GPB_ENUM(LTSCommand_FieldNumber) {
  LTSCommand_FieldNumber_Disable = 1,
};

@interface LTSCommand : GPBMessage

@property(nonatomic, readwrite) BOOL disable;

@end

#pragma mark - LTSReportResponse

typedef GPB_ENUM(LTSReportResponse_FieldNumber) {
  LTSReportResponse_FieldNumber_CommandsArray = 1,
  LTSReportResponse_FieldNumber_ReceiveTimestamp = 2,
  LTSReportResponse_FieldNumber_TransmitTimestamp = 3,
  LTSReportResponse_FieldNumber_ErrorsArray = 4,
};

@interface LTSReportResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<LTSCommand*> *commandsArray;
/// The number of items in @c commandsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger commandsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *receiveTimestamp;
/// Test to see if @c receiveTimestamp has been set.
@property(nonatomic, readwrite) BOOL hasReceiveTimestamp;

@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *transmitTimestamp;
/// Test to see if @c transmitTimestamp has been set.
@property(nonatomic, readwrite) BOOL hasTransmitTimestamp;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *errorsArray;
/// The number of items in @c errorsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger errorsArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
